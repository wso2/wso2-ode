<!--
  ~ Licensed to the Apache Software Foundation (ASF) under one
  ~ or more contributor license agreements.  See the NOTICE file
  ~ distributed with this work for additional information
  ~ regarding copyright ownership.  The ASF licenses this file
  ~ to you under the Apache License, Version 2.0 (the
  ~ "License"); you may not use this file except in compliance
  ~ with the License.  You may obtain a copy of the License at
  ~
  ~    http://www.apache.org/licenses/LICENSE-2.0
  ~
  ~ Unless required by applicable law or agreed to in writing,
  ~ software distributed under the License is distributed on an
  ~ "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
  ~ KIND, either express or implied.  See the License for the
  ~ specific language governing permissions and limitations
  ~ under the License.
  -->

<process name="TestAssign"
         targetNamespace="http://ode/bpel/unit-testAssign1"
         xmlns:ode="http://www.apache.org/ode/type/extension"
         xmlns:bpws="http://docs.oasis-open.org/wsbpel/2.0/process/executable"
         xmlns="http://docs.oasis-open.org/wsbpel/2.0/process/executable"
         xmlns:tns="http://ode/bpel/unit-testAssign1"
         xmlns:xsd="http://www.w3.org/2001/XMLSchema"
         xmlns:test="http://ode/bpel/unit-testAssign1.wsdl"
         queryLanguage="urn:oasis:names:tc:wsbpel:2.0:sublang:xpath2.0"
         expressionLanguage="urn:oasis:names:tc:wsbpel:2.0:sublang:xpath2.0">

    <import location="TestAssign.wsdl"
            namespace="http://ode/bpel/unit-testAssign1.wsdl"
            importType="http://schemas.xmlsoap.org/wsdl/" />

    <partnerLinks>
        <partnerLink name="TestAssignPartnerLink" partnerLinkType="test:TestAssignPartnerLinkType" myRole="me" />
    </partnerLinks>

    <variables>
        <variable name="myVar" messageType="test:TestAssignMessageIn"/>
        <variable name="otherMsgVar" messageType="test:TestAssignMessageOut"/>
        <variable name="strVar" type="xsd:string"/>
        <variable name="intVar" type="xsd:int"/>
        <variable name="intVar2" type="xsd:int"/>
        <variable name="boolVar" type="xsd:boolean"/>
    </variables>

    <sequence>
        <receive name="start" partnerLink="TestAssignPartnerLink" portType="test:TestAssignPortType"
                 operation="testAssign" variable="myVar" createInstance="yes" ignoreUninitializedFromVariable="yes"/>

        <assign name="assign1">
            <copy ignoreMissingFromData="yes" ignoreUninitializedFromVariable="yes">
                <from>$myVar.TestPart/test:bar</from>
                <to>$strVar</to>
            </copy>
            <copy ignoreMissingFromData="yes" ignoreUninitializedFromVariable="yes">
                <from>$strVar</from>
                <to>$myVar.TestPart</to>
            </copy>
            <copy ignoreMissingFromData="yes" ignoreUninitializedFromVariable="yes">
                <from>"blah"</from>
                <to>$strVar</to>
            </copy>
            <copy ignoreMissingFromData="yes" ignoreUninitializedFromVariable="yes">
                <from>$ode:pid</from>
                <to variable="strVar"/>
            </copy>
            <copy ignoreMissingFromData="yes" ignoreUninitializedFromVariable="yes">
                <from>2 + 1</from>
                <to variable="intVar"/>
            </copy>
            <copy ignoreMissingFromData="yes" ignoreUninitializedFromVariable="yes">
                <from>$intVar</from>
                <to>$intVar2</to>
            </copy>
            <copy ignoreMissingFromData="yes" ignoreUninitializedFromVariable="yes">
                <from>$intVar + 1</from>
                <to>$intVar</to>
            </copy>
            <copy ignoreMissingFromData="yes" ignoreUninitializedFromVariable="yes">
                <from>$intVar + 1</from>
                <to variable="intVar"/>
            </copy>
            <copy ignoreMissingFromData="yes" ignoreUninitializedFromVariable="yes">
                <from>$intVar = 5</from>
                <to variable="boolVar"/>
            </copy>
            <copy ignoreMissingFromData="yes" ignoreUninitializedFromVariable="yes">
                <from>abs($intVar + number('2'))</from>
                <to variable="intVar"/>
            </copy>
            <copy ignoreMissingFromData="yes" ignoreUninitializedFromVariable="yes">
                <from variable="myVar" part="TestPart"/>
                <to variable="strVar"/>
            </copy>
            <copy ignoreMissingFromData="yes" ignoreUninitializedFromVariable="yes">
                <from>concat($strVar,' World', $intVar, $boolVar,  $intVar2)</from>
                <to variable="myVar" part="TestPart"/>
            </copy>
            <copy ignoreMissingFromData="yes" ignoreUninitializedFromVariable="yes">
                <from variable="myVar" part="TestPart"/>
                <to variable="otherMsgVar" part="TestPart"/>
            </copy>
            <copy ignoreMissingFromData="no">
                <from>"Hello World"</from>
                <to variable="otherMsgVar" part="TestPart"/>
            </copy>
        </assign>
        <reply name="end" partnerLink="TestAssignPartnerLink" portType="test:TestAssignPortType"
               operation="testAssign" variable="otherMsgVar"/>
    </sequence>
</process>
